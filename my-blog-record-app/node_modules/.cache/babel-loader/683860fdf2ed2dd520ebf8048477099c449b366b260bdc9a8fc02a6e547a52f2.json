{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\my-blog-record-app\\\\src\\\\components\\\\KakaoMap.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst KakaoMap = ({\n  records = []\n}) => {\n  _s();\n  const mapRef = useRef(null);\n  const markersRef = useRef([]);\n  useEffect(() => {\n    const initMap = () => {\n      const container = document.getElementById('map');\n      if (!container) return;\n      const map = new window.kakao.maps.Map(container, {\n        center: new window.kakao.maps.LatLng(36.5, 127.5),\n        level: 12\n      });\n      mapRef.current = map;\n    };\n    if (!window.kakao || !window.kakao.maps) {\n      const script = document.createElement('script');\n      script.src = '//dapi.kakao.com/v2/maps/sdk.js?appkey=eb46d70dcce4c3347f6e67a7afcfa896&autoload=false&libraries=services';\n      script.async = true;\n      script.onload = () => {\n        window.kakao.maps.load(initMap);\n      };\n      document.head.appendChild(script);\n    } else {\n      window.kakao.maps.load(initMap);\n    }\n  }, []);\n  useEffect(() => {\n    if (!window.kakao || !mapRef.current) return;\n    const map = mapRef.current;\n    const geocoder = new window.kakao.maps.services.Geocoder();\n    const bounds = new window.kakao.maps.LatLngBounds();\n    const markers = [];\n\n    // ✅ 모든 비동기 addressSearch 완료 후 map.setBounds 호출을 보장하기 위해 Promise.all 사용\n    const geocodePromises = records.map(record => {\n      return new Promise(resolve => {\n        var _record$address;\n        const address = (_record$address = record.address) === null || _record$address === void 0 ? void 0 : _record$address.trim();\n        if (!address) return resolve(null);\n        geocoder.addressSearch(address, (result, status) => {\n          if (status === window.kakao.maps.services.Status.OK) {\n            const coords = new window.kakao.maps.LatLng(result[0].y, result[0].x);\n            const marker = new window.kakao.maps.Marker({\n              map,\n              position: coords\n            });\n            bounds.extend(coords);\n            markers.push(marker);\n            resolve(marker);\n          } else {\n            console.warn('❌ 주소 검색 실패:', address);\n            resolve(null);\n          }\n        });\n      });\n    });\n\n    // ✅ 모든 addressSearch 끝난 뒤에 setBounds 실행\n    Promise.all(geocodePromises).then(() => {\n      if (!bounds.isEmpty()) {\n        map.setBounds(bounds);\n      }\n\n      // 이전 마커 제거\n      markersRef.current.forEach(m => m.setMap(null));\n      markersRef.current = markers;\n    });\n  }, [records]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"map\",\n    style: {\n      width: '100%',\n      height: '500px'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 10\n  }, this);\n};\n_s(KakaoMap, \"Sb1doZEiBErLIY1/N+98oSK+594=\");\n_c = KakaoMap;\nexport default KakaoMap;\nvar _c;\n$RefreshReg$(_c, \"KakaoMap\");","map":{"version":3,"names":["React","useEffect","useRef","jsxDEV","_jsxDEV","KakaoMap","records","_s","mapRef","markersRef","initMap","container","document","getElementById","map","window","kakao","maps","Map","center","LatLng","level","current","script","createElement","src","async","onload","load","head","appendChild","geocoder","services","Geocoder","bounds","LatLngBounds","markers","geocodePromises","record","Promise","resolve","_record$address","address","trim","addressSearch","result","status","Status","OK","coords","y","x","marker","Marker","position","extend","push","console","warn","all","then","isEmpty","setBounds","forEach","m","setMap","id","style","width","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/my-blog-record-app/src/components/KakaoMap.jsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\n\r\nconst KakaoMap = ({ records = [] }) => {\r\n  const mapRef = useRef(null);\r\n  const markersRef = useRef([]);\r\n\r\n  useEffect(() => {\r\n    const initMap = () => {\r\n      const container = document.getElementById('map');\r\n      if (!container) return;\r\n\r\n      const map = new window.kakao.maps.Map(container, {\r\n        center: new window.kakao.maps.LatLng(36.5, 127.5),\r\n        level: 12,\r\n      });\r\n\r\n      mapRef.current = map;\r\n    };\r\n\r\n    if (!window.kakao || !window.kakao.maps) {\r\n      const script = document.createElement('script');\r\n      script.src = '//dapi.kakao.com/v2/maps/sdk.js?appkey=eb46d70dcce4c3347f6e67a7afcfa896&autoload=false&libraries=services';\r\n      script.async = true;\r\n      script.onload = () => {\r\n        window.kakao.maps.load(initMap);\r\n      };\r\n      document.head.appendChild(script);\r\n    } else {\r\n      window.kakao.maps.load(initMap);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!window.kakao || !mapRef.current) return;\r\n\r\n    const map = mapRef.current;\r\n    const geocoder = new window.kakao.maps.services.Geocoder();\r\n    const bounds = new window.kakao.maps.LatLngBounds();\r\n    const markers = [];\r\n\r\n    // ✅ 모든 비동기 addressSearch 완료 후 map.setBounds 호출을 보장하기 위해 Promise.all 사용\r\n    const geocodePromises = records.map((record) => {\r\n      return new Promise((resolve) => {\r\n        const address = record.address?.trim();\r\n        if (!address) return resolve(null);\r\n\r\n        geocoder.addressSearch(address, (result, status) => {\r\n          if (status === window.kakao.maps.services.Status.OK) {\r\n            const coords = new window.kakao.maps.LatLng(result[0].y, result[0].x);\r\n\r\n            const marker = new window.kakao.maps.Marker({\r\n              map,\r\n              position: coords,\r\n            });\r\n\r\n            bounds.extend(coords);\r\n            markers.push(marker);\r\n            resolve(marker);\r\n          } else {\r\n            console.warn('❌ 주소 검색 실패:', address);\r\n            resolve(null);\r\n          }\r\n        });\r\n      });\r\n    });\r\n\r\n    // ✅ 모든 addressSearch 끝난 뒤에 setBounds 실행\r\n    Promise.all(geocodePromises).then(() => {\r\n      if (!bounds.isEmpty()) {\r\n        map.setBounds(bounds);\r\n      }\r\n\r\n      // 이전 마커 제거\r\n      markersRef.current.forEach((m) => m.setMap(null));\r\n      markersRef.current = markers;\r\n    });\r\n  }, [records]);\r\n\r\n  return <div id=\"map\" style={{ width: '100%', height: '500px' }} />;\r\n};\r\n\r\nexport default KakaoMap;\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}